<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finalproject.team4.shouldbe.mapper.MypageMapper">
    <select id="mypage_info" resultType="MypageVO">
        select user_id, password, lang, profile_content, salt
        from users
        where user_id = #{param1};
    </select>
    <update id="mypage_edit">
        update users
        set profile_content=#{profile_content},
            lang=#{lang}
        where user_id = #{user_id};
    </update>
    <select id="mypage_post_board" resultType="BoardVO">
        select post_id, user_id, title, date_format(write_date, '%y-%m-%d') write_date
        from posts
        where user_id = #{user_id};
    </select>
    <select id="mypage_post_board_reply" resultType="BoardReplyVO">
        select comment_id, post_id, user_id, content, date_format(write_date, '%y-%m-%d') write_date
        from comments
        where user_id = #{user_id};
    </select>
    <select id="countSaveMessages" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM save_message
        WHERE save_user_id = #{userid}
    </select>

    <select id="selectSaveMessages" parameterType="map" resultType="SaveMessageVO">
        SELECT msg_id, save_user_id
        FROM save_message
        WHERE save_user_id = #{userid}
        ORDER BY msg_id
            LIMIT #{pvo.offsetPoint}, #{pvo.onePageRecord}
    </select>

    <select id="friendList" resultType="FriendVO">
        select user_name, profile_content, profile_img, following_user_id, followed_user_id
        from users as u
                 join friend as f on u.user_id = f.following_user_id
        where followed_user_id = #{followed_user_id}
    </select>

    <delete id="friendDelete">
        delete
        from friend
        where followed_user_id = #{param1}
          and following_user_id = #{param2}
    </delete>

    <select id="blockList" resultType="BlockVO">
        select block_id, b.user_id, block_reason, user_name
        from users as u
                 join block_list as b on u.user_id = b.block_id
        where b.user_id = #{user_id}
    </select>

    <delete id="block_id_unlock">
        delete
        from block_list
        where block_id = #{param1}
          and user_id = #{param2}
    </delete>

    <insert id="withdraw_user_date">
        insert into withdrawn_users (user_id)
        values (#{user_id})
    </insert>

    <update id="withdraw_user">
        update users
        set withdraw='1'
        where user_id = #{user_id}
    </update>
</mapper>